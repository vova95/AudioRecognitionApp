@model List<AudioRecognitionApp.BLL.DTO.DesiredSongDTO>
@{
    ViewBag.Title = "Index";
    int i = 0;
    var classes = new[] { "info", "", "success", "", "danger" };
}

<div class="main-container">
    <div class="form-container" style="text-align: center">
        @using (Html.BeginForm("Index", "Main", FormMethod.Post, new { id = "upload-form", enctype = "multipart/form-data" }))
        {
            <input type="file" accept="audio/mp3, audio/wav" name="file" id="selectedFile" style="display: none;" />
            <div class="input-group">
                <input type="text" value="" class="form-control" id="file-path" readonly />
                <span class="input-group-btn">
                    <input type="button" class="btn btn-warning" value="Browse Song" onclick="document.getElementById('selectedFile').click();">
                </span>
            </div>
            <input type="submit" value="Recognize" class="btn btn-warning btn-recognize" />
        }
    </div>
    @if (Model != null)
    {

        
        <table class="table table-striped table-bordered table-sm">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th style="text-align: center">Matches</th>
                    <th style="text-align: center">Absolute Time</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var song in Model)
                {
                    <tr class="@classes[i] trtr">
                        <td>@(++i)</td>
                        <td>@song.Name</td>
                        <td style="text-align: center">@song.TotalMatches.TotalMatches</td>
                        <td style="text-align: center">@song.TotalMatches.AbsoluteTime</td>
                    </tr>
                }
            </tbody>
        </table>
        <canvas id="chart-canvas" height="200" style="margin-top: 25px;"></canvas>
        <script type="text/javascript">
            @{
                List<int> items = new List<int>(Model.Count);
                Model.ForEach(el => items.Add(Model.IndexOf(el) + 1));
            }
            var labels = @Html.Raw(Json.Encode(items.Select(item => item).ToList()));
            var data = @Html.Raw(Json.Encode(Model.Select(item => item.TotalMatches.TotalMatches).ToList()));
            createChart(labels, data);
        </script>
    }
    <div id="loader"></div>
</div>
